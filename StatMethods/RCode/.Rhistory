Probit
Probit
logPost
logPost
Probit
LogPostProbit
logPost
 logPost = LogPostProbit
logPost
if (Probit ==1){
  logPost = LogPostProbit;
}
else{
  logPost = LogPostLogistic;
}
if (Probit ==1){
  logPost = LogPostProbit;
}
else{
  logPost = LogPostLogistic;
}
Probit
LogPostLogistic
LogPostProbit
if (Probit==1){
  logPost = LogPostProbit;
}
else{
  logPost = LogPostLogistic;
}
if (Probit==1)
{
  logPost = LogPostProbit;
} else
{
  logPost = LogPostLogistic;
}
if (Probit==1){
  logPost = LogPostProbit;
} else{
  logPost = LogPostLogistic;
}
logPost
Probit
##Spam filter
Spam <- read.table("SpamReduced.dat",header=TRUE)  # Spam data from Hastie et al.
attach(Spam)

#Define the log-likelihood function, I use 16 covariates including the intercept but exclude the variable "const"
ll <- function(beta){

#linear predictor
beta1 <- beta[1]+beta[2]*our+beta[3]*over+beta[4]*remove+beta[5]*internet+beta[6]*free+beta[7]*hpl+beta[8]*tan+
beta[9]*dollar+beta[10]*CapRunMax+beta[11]*CapRunTotal+beta[12]*hp+beta[13]*george+beta[14]*X1999+beta[15]*re+
beta[16]*edu

#log-likelihood function
ll <- sum(spam*log(pnorm(beta1))+(1-spam)*log(1-pnorm(beta1)))

#return minus log-likelihood 
return(-ll)
}

estimate <- optim(par=c(rep(0,16)),fn=ll,hessian=T) #I set the all starting values be zero.

Spam
names(Spam)
isinf(4)
isnan(4)
Inf
a=Inf
a
if (a<Inf) b=3, else b=2
if (a<Inf) b=3
b
if (a==Inf) b=3
b
abs(a)
a=-5
abs(a)
covNames
covNames[4:6]
